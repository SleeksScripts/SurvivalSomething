local library = loadstring(game:GetObjects("rbxassetid://7657867786")[1].Source)()
local Wait = library.subs.Wait 

local PepsisWorld = library:CreateWindow({
Name = "Pepsi's World",
Themeable = {
Info = ""
}
})

local FarmingTab = PepsisWorld:CreateTab({
    Name = "Farming"
    })

    local FarmingSection1 = FarmingTab:CreateSection({
        Name = "AutoPickup"
        })


        FarmingSection1:AddToggle({
            Name = "AutoPickup Items",
            Flag = "AutoPickup12",
            Callback = function(state)
                getgenv().autoPickup = state
           autoPickup()
            end
            })

        



local GeneralTab = PepsisWorld:CreateTab({
Name = "Combat"
})
local FarmingSection = GeneralTab:CreateSection({
Name = "Aimbot"
})

FarmingSection:AddButton({
    Name = "Toggle Aimbot (On)",
    Callback = function()
        getgenv().aimbot = true
		aimbot()
    end
    })

    FarmingSection:AddButton({
        Name = "Toggle Aimbot (Off)",
        Callback = function()
            getgenv().aimbotoff = true
            aimbotoff()
        end
        })



    local espTAB = PepsisWorld:CreateTab({
        Name = "ESP"
        })
        local ESPsection = espTAB:CreateSection({
        Name = "Player ESP"
        })
        
        ESPsection:AddButton({
            Name = "Box ESP",
            Callback = function()
                boxEsp()
            end
            })
     

            ESPsection:AddButton({
                Name = "Tracer ESP",
                Callback = function()
                    tracerEsp()
                end
                })

           

            ESPsection:AddButton({
                Name = "Name ESP (Q to toggle)",
                Callback = function()
                    nameEsp()
                end
                })
        


            ESPsection:AddButton({
                Name = "Player Chams",
                Callback = function()
                    nameEsp()
                end
                })



--FUNCTIONS




--[[while wait() do
    for i,v in pairs (game.Players:GetPlayers()) do

game:GetService("ReplicatedStorage").remoteInterface.interactions.meleePlayer:FireServer(2181578752,1,game:GetService("Players"),v)
task.wait(0.00001)
end
end]]--


--[[function autoChop()
    while getgenv().autoChop == true do wait()
        for i,v in pairs(game:GetService("Workspace").worldResources.choppable:GetDescendants()) do
            if v.Name == "hitbox" then
                -- Script generated by TurtleSpy, made by Intrer#0421

game:GetService("ReplicatedStorage").remoteInterface.interactions.chop:FireServer(3222061056,1,workspace.worldResources.choppable[v.Parent.Parent][v.Parent],CFrame.new(v.CFrame))
            end

        end
    end
        end]]--

--[[local teleport_table = {
    location1 = Vector3.new(-230, 22.5624981, 396, 1, 0, 0, 0, 1, 0, 0, 0, 1),

}

local tween_s = game:GetService('TweenService')
local tweeninfo = TweenInfo.new(3,Enum.EasingStyle.Linear)

local lp = game.Players.LocalPlayer

function bypass_teleport(v)
    if lp.Character and
    lp.Character:FindFirstChild('HumanoidRootPart') then

        
    
    local cf = CFrame.new(v)
    local a = tween_s:Create(lp.Character.HumanoidRootPart,
                            tweeninfo,  {CFrame=cf})
                    a:Play()
end

end

bypass_teleport(teleport_table.location1)]]--









function autoPickup()
while getgenv().autoPickup == true do wait()
    local playerHead = game.Players.LocalPlayer.Character.Head
    for i,v in pairs(game:GetService("Workspace").droppedItems:GetDescendants()) do
        
                if v.Name == "TouchInterest" and v.Parent then
                    
                    firetouchinterest(playerHead, v.Parent, 0)
        
                    firetouchinterest(playerHead, v.Parent, 1)

                end
            end
            end

    end




function chamEsp()
    local dwEntities = game:GetService("Players")
local dwLocalPlayer = dwEntities.LocalPlayer 
local dwRunService = game:GetService("RunService")

local settings_tbl = {
ESP_Enabled = true,
ESP_TeamCheck = false,
Chams = true,
Chams_Color = Color3.fromRGB(0,0,255),
Chams_Transparency = 0.1,
Chams_Glow_Color = Color3.fromRGB(255,0,0)
}

function destroy_chams(char)

for k,v in next, char:GetChildren() do 

    if v:IsA("BasePart") and v.Transparency ~= 1 then

        if v:FindFirstChild("Glow") and 
        v:FindFirstChild("Chams") then

            v.Glow:Destroy()
            v.Chams:Destroy() 

        end 

    end 

end 

end

dwRunService.Heartbeat:Connect(function()

if settings_tbl.ESP_Enabled then

    for k,v in next, dwEntities:GetPlayers() do 

        if v ~= dwLocalPlayer then

            if v.Character and
            v.Character:FindFirstChild("HumanoidRootPart") and 
            v.Character:FindFirstChild("Humanoid") and 
            v.Character:FindFirstChild("Humanoid").Health ~= 0 then

                if settings_tbl.ESP_TeamCheck == false then

                    local char = v.Character 

                    for k,b in next, char:GetChildren() do 

                        if b:IsA("BasePart") and 
                        b.Transparency ~= 1 then
                            
                            if settings_tbl.Chams then

                                if not b:FindFirstChild("Glow") and
                                not b:FindFirstChild("Chams") then

                                    local chams_box = Instance.new("BoxHandleAdornment", b)
                                    chams_box.Name = "Chams"
                                    chams_box.AlwaysOnTop = true 
                                    chams_box.ZIndex = 4 
                                    chams_box.Adornee = b 
                                    chams_box.Color3 = settings_tbl.Chams_Color
                                    chams_box.Transparency = settings_tbl.Chams_Transparency
                                    chams_box.Size = b.Size + Vector3.new(0.02, 0.02, 0.02)

                                    local glow_box = Instance.new("BoxHandleAdornment", b)
                                    glow_box.Name = "Glow"
                                    glow_box.AlwaysOnTop = false 
                                    glow_box.ZIndex = 3 
                                    glow_box.Adornee = b 
                                    glow_box.Color3 = settings_tbl.Chams_Glow_Color
                                    glow_box.Size = chams_box.Size + Vector3.new(0.13, 0.13, 0.13)

                                end

                            else

                                destroy_chams(char)

                            end
                        
                        end

                    end

                else

                    if v.Team == dwLocalPlayer.Team then
                        destroy_chams(v.Character)
                    end

                end

            else

                destroy_chams(v.Character)

            end

        end

    end

else 

    for k,v in next, dwEntities:GetPlayers() do 

        if v ~= dwLocalPlayer and 
        v.Character and 
        v.Character:FindFirstChild("HumanoidRootPart") and 
        v.Character:FindFirstChild("Humanoid") and 
        v.Character:FindFirstChild("Humanoid").Health ~= 0 then
            
            destroy_chams(v.Character)

        end

    end

end

end)
end



function tracerEsp()
    local loPlayer = game.Players.LocalPlayer
    local camera = game:GetService("Workspace").CurrentCamera
    local CurrentCamera = workspace.CurrentCamera
    local worldToViewportPoint = CurrentCamera.worldToViewportPoint
    
    getgenv().teamcheck = true
    
    for i,v in pairs(game.Players:GetChildren()) do
        local Tracer = Drawing.new("Line")
        Tracer.Visible = false
        Tracer.Color = Color3.new(1,1,1)
        Tracer.Thickness = 1
        Tracer.Transparency = 1
    
        function tracer()
            game:GetService("RunService").RenderStepped:Connect(function()
                if v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v ~= loPlayer and v.Character.Humanoid.Health > 0 then
                    local Vector, OnScreen = camera:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
    
                    if OnScreen then Tracer.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 1)
                        Tracer.To = Vector2.new(Vector.X, Vector.Y)
    
                        if getgenv().TeamCheck and v.TeamColor == loPlayer.TeamColor then
                            
                            Tracer.Visible =  false
    
                        else
    
                            Tracer.Visible =  true
                        end
                        
                    else
                        Tracer.Visible = false
                    end
                else
                    Tracer.Visible =  true
                end
                        end)
                end
    coroutine.wrap(tracer)()
            end
            game.Players.PlayerAdded:Connect(function(v)
                --if not function
                local Tracer = Drawing.new("Line")
        Tracer.Visible = false
        Tracer.Color = Color3.new(1,1,1)
        Tracer.Thickness = 1
        Tracer.Transparency = 1
    
        function tracer()
            game:GetService("RunService").RenderStepped:Connect(function()
                if v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v ~= loPlayer and v.Character.Humanoid.Health > 0 then
                    local Vector, OnScreen = camera:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
    
                    if OnScreen then Tracer.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 1)
                        Tracer.To = Vector2.new(Vector.X, Vector.Y)
    
                        if getgenv().TeamCheck and v.TeamColor == loPlayer.TeamColor then
                            
                            Tracer.Visible =  false
    
                        else
    
                            Tracer.Visible =  true
                        end
                        
                    else
                        Tracer.Visible = false
                    end
                else
                    Tracer.Visible =  true
                end
                        end)
                end
    coroutine.wrap(tracer)()
            end)
        end
    


function boxEsp()
    local lplr = game.Players.LocalPlayer
    local camera = game:GetService("Workspace").CurrentCamera
    local CurrentCamera = workspace.CurrentCamera
    local worldToViewportPoint = CurrentCamera.worldToViewportPoint
    
    local HeadOff = Vector3.new(0, 0.5, 0)
    local LegOff = Vector3.new(0,3,0)
    
    for i,v in pairs(game.Players:GetChildren()) do
        local BoxOutline = Drawing.new("Square")
        BoxOutline.Visible = false
        BoxOutline.Color = Color3.new(0,0,0)
        BoxOutline.Thickness = 3
        BoxOutline.Transparency = 1
        BoxOutline.Filled = false
    
        local Box = Drawing.new("Square")
        Box.Visible = false
        Box.Color = Color3.new(1,1,1)
        Box.Thickness = 1
        Box.Transparency = 1
        Box.Filled = false
    
        local HealthBarOutline = Drawing.new("Square")
        HealthBarOutline.Thickness = 3
        HealthBarOutline.Filled = false
        HealthBarOutline.Color = Color3.new(0,0,0)
        HealthBarOutline.Transparency = 1
        HealthBarOutline.Visible = false
    
        local HealthBar = Drawing.new("Square")
        HealthBar.Thickness = 1
        HealthBar.Filled = false
        HealthBar.Transparency = 1
        HealthBar.Visible = false
    
        function boxesp()
            game:GetService("RunService").RenderStepped:Connect(function()
                if v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v ~= lplr and v.Character.Humanoid.Health > 0 then
                    local Vector, onScreen = camera:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
    
                    local RootPart = v.Character.HumanoidRootPart
                    local Head = v.Character.Head
                    local RootPosition, RootVis = worldToViewportPoint(CurrentCamera, RootPart.Position)
                    local HeadPosition = worldToViewportPoint(CurrentCamera, Head.Position + HeadOff)
                    local LegPosition = worldToViewportPoint(CurrentCamera, RootPart.Position - LegOff)
    
                    if onScreen then
                        BoxOutline.Size = Vector2.new(1000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y)
                        BoxOutline.Position = Vector2.new(RootPosition.X - BoxOutline.Size.X / 2, RootPosition.Y - BoxOutline.Size.Y / 2)
                        BoxOutline.Visible = true
    
                        Box.Size = Vector2.new(1000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y)
                        Box.Position = Vector2.new(RootPosition.X - Box.Size.X / 2, RootPosition.Y - Box.Size.Y / 2)
                        Box.Visible = true
    
                        HealthBarOutline.Size = Vector2.new(2, HeadPosition.Y - LegPosition.Y)
                        HealthBarOutline.Position = BoxOutline.Position - Vector2.new(6,0)
                        HealthBarOutline.Visible = true
    
                        HealthBar.Size = Vector2.new(2, (HeadPosition.Y - LegPosition.Y) / (game:GetService("Players")[v.Character.Name].NRPBS["MaxHealth"].Value / math.clamp(game:GetService("Players")[v.Character.Name].NRPBS["Health"].Value, 0, game:GetService("Players")[v.Character.Name].NRPBS:WaitForChild("MaxHealth").Value)))
                        HealthBar.Position = Vector2.new(Box.Position.X - 6, Box.Position.Y + (1 / HealthBar.Size.Y))
                        HealthBar.Color = Color3.fromRGB(255 - 255 / (game:GetService("Players")[v.Character.Name].NRPBS["MaxHealth"].Value / game:GetService("Players")[v.Character.Name].NRPBS["Health"].Value), 255 / (game:GetService("Players")[v.Character.Name].NRPBS["MaxHealth"].Value / game:GetService("Players")[v.Character.Name].NRPBS["Health"].Value), 0)
                        HealthBar.Visible = true
    
                        if v.TeamColor == lplr.TeamColor then
                            --- Our Team
                            BoxOutline.Visible = false
                            Box.Visible = false
                            HealthBarOutline.Visible = false
                            HealthBar.Visible = false
                        else
                            ---Enemy Team
                            BoxOutline.Visible = true
                            Box.Visible = true
                            HealthBarOutline.Visible = true
                            HealthBar.Visible = true
                        end
    
                    else
                        BoxOutline.Visible = false
                        Box.Visible = false
                        HealthBarOutline.Visible = false
                        HealthBar.Visible = false
                    end
                else
                    BoxOutline.Visible = false
                    Box.Visible = false
                    HealthBarOutline.Visible = false
                    HealthBar.Visible = false
                end
            end)
        end
        coroutine.wrap(boxesp)()
    end
    
    game.Players.PlayerAdded:Connect(function(v)
        local BoxOutline = Drawing.new("Square")
        BoxOutline.Visible = false
        BoxOutline.Color = Color3.new(0,0,0)
        BoxOutline.Thickness = 3
        BoxOutline.Transparency = 1
        BoxOutline.Filled = false
    
        local Box = Drawing.new("Square")
        Box.Visible = false
        Box.Color = Color3.new(1,1,1)
        Box.Thickness = 1
        Box.Transparency = 1
        Box.Filled = false
    
        local HealthBarOutline = Drawing.new("Square")
        HealthBarOutline.Thickness = 3
        HealthBarOutline.Filled = false
        HealthBarOutline.Color = Color3.new(0,0,0)
        HealthBarOutline.Transparency = 1
        HealthBarOutline.Visible = false
    
        local HealthBar = Drawing.new("Square")
        HealthBar.Thickness = 1
        HealthBar.Filled = false
        HealthBar.Transparency = 1
        HealthBar.Visible = false
    
        function boxesp()
            game:GetService("RunService").RenderStepped:Connect(function()
                if v.Character ~= nil and v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("HumanoidRootPart") ~= nil and v ~= lplr and v.Character.Humanoid.Health > 0 then
                    local Vector, onScreen = camera:worldToViewportPoint(v.Character.HumanoidRootPart.Position)
    
                    local RootPart = v.Character.HumanoidRootPart
                    local Head = v.Character.Head
                    local RootPosition, RootVis = worldToViewportPoint(CurrentCamera, RootPart.Position)
                    local HeadPosition = worldToViewportPoint(CurrentCamera, Head.Position + HeadOff)
                    local LegPosition = worldToViewportPoint(CurrentCamera, RootPart.Position - LegOff)
    
                    if onScreen then
                        BoxOutline.Size = Vector2.new(1000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y)
                        BoxOutline.Position = Vector2.new(RootPosition.X - BoxOutline.Size.X / 2, RootPosition.Y - BoxOutline.Size.Y / 2)
                        BoxOutline.Visible = true
    
                        Box.Size = Vector2.new(1000 / RootPosition.Z, HeadPosition.Y - LegPosition.Y)
                        Box.Position = Vector2.new(RootPosition.X - Box.Size.X / 2, RootPosition.Y - Box.Size.Y / 2)
                        Box.Visible = true
    
                        HealthBarOutline.Size = Vector2.new(2, HeadPosition.Y - LegPosition.Y)
                        HealthBarOutline.Position = BoxOutline.Position - Vector2.new(6,0)
                        HealthBarOutline.Visible = true
    
                        HealthBar.Size = Vector2.new(2, (HeadPosition.Y - LegPosition.Y) / (game:GetService("Players")[v.Character.Name].NRPBS["MaxHealth"].Value / math.clamp(game:GetService("Players")[v.Character.Name].NRPBS["Health"].Value, 0, game:GetService("Players")[v.Character.Name].NRPBS:WaitForChild("MaxHealth").Value)))
                        HealthBar.Position = Vector2.new(Box.Position.X - 6, Box.Position.Y + (1/HealthBar.Size.Y))
                HealthBar.Color = Color3.fromRGB(255 - 255 / (game:GetService("Players")[v.Character.Name].NRPBS["MaxHealth"].Value / game:GetService("Players")[v.Character.Name].NRPBS["Health"].Value), 255 / (game:GetService("Players")[v.Character.Name].NRPBS["MaxHealth"].Value / game:GetService("Players")[v.Character.Name].NRPBS["Health"].Value), 0)                    
                HealthBar.Visible = true
    
                        if v.TeamColor == lplr.TeamColor then
                            --- Our Team
                            BoxOutline.Visible = false
                            Box.Visible = false
                            HealthBarOutline.Visible = false
                            HealthBar.Visible = false
                        else
                            ---Enemy Team
                            BoxOutline.Visible = true
                            Box.Visible = true
                            HealthBarOutline.Visible = true
                            HealthBar.Visible = true
                        end
    
                    else
                        BoxOutline.Visible = false
                        Box.Visible = false
                        HealthBarOutline.Visible = false
                        HealthBar.Visible = false
                    end
                else
                    BoxOutline.Visible = false
                    Box.Visible = false
                    HealthBarOutline.Visible = false
                    HealthBar.Visible = false
                end
            end)
        end
        coroutine.wrap(boxesp)()
    end)
end



function nameEsp()
    getgenv().nameEsp = true do
        loadstring(game:HttpGet("https://raw.githubusercontent.com/SleeksScripts/ESP/main/script"))()
        
        game:GetService("StarterGui"):SetCore("SendNotification",{
            Duration = "1",
            Title = "ESP", -- Required
            Text = "To toggle the ESP press Q", 
            
            
            
        })
            
    
    end
    end



function aimbot()
    if getgenv().aimbot == true then
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local RunService = game:GetService("RunService") 
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Holding = false

--Aimbot settings

getgenv().AimbotEnabled =  true
getgenv().TeamCheck =  true
getgenv().AimPart = "Head"
getgenv().Sensitivity = 0

--Cirlce Settings

getgenv().CircleSides = 64
getgenv().CircleColor = Color3.fromRGB(255,255,255)
getgenv().CircleTransparency = 0.7
getgenv().CircleRadius = 80
getgenv().CircleFilled = false
getgenv().CircleVisible = true
getgenv().CircleThickness = 0


local FOVCircle = Drawing.new("Circle")
FOVCircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
FOVCircle.Radius = getgenv().CircleRadius
FOVCircle.Filled = getgenv().CircleFilled
FOVCircle.Color = getgenv().CircleColor
FOVCircle.Visible = getgenv().CircleVisible
FOVCircle.Radius = getgenv().CircleRadius
FOVCircle.Transparency = getgenv().CircleTransparency
FOVCircle.NumSides = getgenv().CircleSides
FOVCircle.Thickness = getgenv().CircleThickness

local function GetClosestPlayer()
    local MaximumDistance = getgenv().CircleRadius
    local Target = nil

    for _,v in next, Players:GetPlayers() do
        if v.Name ~= LocalPlayer.Team then
            if getgenv().TeamCheck == true then
                if v.Team ~= LocalPlayer.Team then
                    if v.Character ~= nil then
                        if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
                            if v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("Humanoid").Health ~= 0 then
                                local ScreenPoint = Camera:WorldToScreenPoint(v.Character:WaitForChild("HumanoidRootPart", math.huge).Position)
                                local VectorDistance = (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude

                                if VectorDistance < MaximumDistance then
                                    Target = v
                                end
                            end
                        end
                    end
                end
            else
                if v.Character ~= nil then
                    if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
                        if v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("Humanoid").Health ~= 0 then
                            local ScreenPoint = Camera:WorldToScreenPoint(v.Character:WaitForChild("HumanoidRootPart", math.huge).Position)
                            local VectorDistance = (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude

                            if VectorDistance < MaximumDistance then
                                Target = v
                            end
                        end
                    end
                end
            end
        end
    end
return Target
end

UserInputService.InputBegan:Connect(function(Input)
    if Input.UserInputType == Enum.UserInputType.MouseButton2 then
        Holding = true
    end
    end)

    UserInputService.InputEnded:Connect(function(Input)
        if Input.UserInputType == Enum.UserInputType.MouseButton2 then
            Holding = false
        end
        end)

        RunService.RenderStepped:Connect(function()

FOVCircle.Position = Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y)
FOVCircle.Radius = getgenv().CircleRadius
FOVCircle.Filled = getgenv().CircleFilled
FOVCircle.Color = getgenv().CircleColor
FOVCircle.Visible = getgenv().CircleVisible
FOVCircle.Radius = getgenv().CircleRadius
FOVCircle.Transparency = getgenv().CircleTransparency
FOVCircle.NumSides = getgenv().CircleSides
FOVCircle.Thickness = getgenv().CircleThickness

    
if Holding == true and getgenv().AimbotEnabled == true then
    TweenService:Create(Camera , TweenInfo.new(getgenv().Sensitivity, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {CFrame = CFrame.new(Camera.CFrame.Position, GetClosestPlayer().Character[getgenv().AimPart].Position)}):Play()

end

end)
end
end


function aimbotoff()
    if getgenv().aimbotoff == true then
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local RunService = game:GetService("RunService") 
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Holding = false

--Aimbot settings

getgenv().AimbotEnabled =  false
getgenv().TeamCheck =  true
getgenv().AimPart = "Head"
getgenv().Sensitivity = 0

--Cirlce Settings

getgenv().CircleSides = 64
getgenv().CircleColor = Color3.fromRGB(255,255,255)
getgenv().CircleTransparency = 0.7
getgenv().CircleRadius = 80
getgenv().CircleFilled = false
getgenv().CircleVisible = false
getgenv().CircleThickness = 0


local FOVCircle = Drawing.new("Circle")
FOVCircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
FOVCircle.Radius = getgenv().CircleRadius
FOVCircle.Filled = getgenv().CircleFilled
FOVCircle.Color = getgenv().CircleColor
FOVCircle.Visible = getgenv().CircleVisible
FOVCircle.Radius = getgenv().CircleRadius
FOVCircle.Transparency = getgenv().CircleTransparency
FOVCircle.NumSides = getgenv().CircleSides
FOVCircle.Thickness = getgenv().CircleThickness

local function GetClosestPlayer()
    local MaximumDistance = getgenv().CircleRadius
    local Target = nil

    for _,v in next, Players:GetPlayers() do
        if v.Name ~= LocalPlayer.Team then
            if getgenv().TeamCheck == true then
                if v.Team ~= LocalPlayer.Team then
                    if v.Character ~= nil then
                        if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
                            if v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("Humanoid").Health ~= 0 then
                                local ScreenPoint = Camera:WorldToScreenPoint(v.Character:WaitForChild("HumanoidRootPart", math.huge).Position)
                                local VectorDistance = (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude

                                if VectorDistance < MaximumDistance then
                                    Target = v
                                end
                            end
                        end
                    end
                end
            else
                if v.Character ~= nil then
                    if v.Character:FindFirstChild("HumanoidRootPart") ~= nil then
                        if v.Character:FindFirstChild("Humanoid") ~= nil and v.Character:FindFirstChild("Humanoid").Health ~= 0 then
                            local ScreenPoint = Camera:WorldToScreenPoint(v.Character:WaitForChild("HumanoidRootPart", math.huge).Position)
                            local VectorDistance = (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude

                            if VectorDistance < MaximumDistance then
                                Target = v
                            end
                        end
                    end
                end
            end
        end
    end
return Target
end

UserInputService.InputBegan:Connect(function(Input)
    if Input.UserInputType == Enum.UserInputType.MouseButton2 then
        Holding = true
    end
    end)

    UserInputService.InputEnded:Connect(function(Input)
        if Input.UserInputType == Enum.UserInputType.MouseButton2 then
            Holding = false
        end
        end)

        RunService.RenderStepped:Connect(function()

FOVCircle.Position = Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y)
FOVCircle.Radius = getgenv().CircleRadius
FOVCircle.Filled = getgenv().CircleFilled
FOVCircle.Color = getgenv().CircleColor
FOVCircle.Visible = getgenv().CircleVisible
FOVCircle.Radius = getgenv().CircleRadius
FOVCircle.Transparency = getgenv().CircleTransparency
FOVCircle.NumSides = getgenv().CircleSides
FOVCircle.Thickness = getgenv().CircleThickness

    
if Holding == true and getgenv().AimbotEnabled == true then
    TweenService:Create(Camera , TweenInfo.new(getgenv().Sensitivity, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {CFrame = CFrame.new(Camera.CFrame.Position, GetClosestPlayer().Character[getgenv().AimPart].Position)}):Play()

end

end)
end
end
